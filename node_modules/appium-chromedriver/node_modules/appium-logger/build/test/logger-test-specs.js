require('source-map-support').install();

'use strict';

var _helpers = require('./helpers');

describe('test logger', function () {
  var writers = undefined,
      log = undefined;
  before(function () {
    writers = (0, _helpers.setupWriters)();
    log = (0, _helpers.getDynamicLogger)(true);
  });

  after(function () {
    (0, _helpers.restoreWriters)(writers);
  });

  it('should contains levels', function () {
    log.levels.should.have.length.above(3);
    log.levels[2].should.equal('debug');
  });

  it('should unwrap', function () {
    log.unwrap.should.exists;
    log.unwrap().should.exists;
  });

  it('should rewrite npmlog levels during testing', function () {
    var text = 'hi';
    log.silly(text);
    log.verbose(text);
    log.info(text);
    log.http(text);
    log.warn(text);
    log.error(text);
    (function () {
      log.errorAndThrow(text);
    }).should['throw'](text);
    (0, _helpers.assertOutputDoesntContain)(writers, text);
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbG9nZ2VyLXRlc3Qtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozt1QkFHMEMsV0FBVzs7QUFFckQsUUFBUSxDQUFDLGFBQWEsRUFBRSxZQUFNO0FBQzVCLE1BQUksT0FBTyxZQUFBO01BQUUsR0FBRyxZQUFBLENBQUM7QUFDakIsUUFBTSxDQUFDLFlBQU07QUFDWCxXQUFPLEdBQUcsYUFONkIsWUFBWSxHQU0zQixDQUFDO0FBQ3pCLE9BQUcsR0FBRyxhQVBELGdCQUFnQixFQU9FLElBQUksQ0FBQyxDQUFDO0dBQzlCLENBQUMsQ0FBQzs7QUFFSCxPQUFLLENBQUMsWUFBTTtBQUNWLGlCQVh1QixjQUFjLEVBV3RCLE9BQU8sQ0FBQyxDQUFDO0dBQ3pCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsd0JBQXdCLEVBQUUsWUFBTTtBQUNqQyxPQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxPQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7R0FDckMsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyxlQUFlLEVBQUUsWUFBTTtBQUN4QixPQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDekIsT0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7R0FDNUIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyw2Q0FBNkMsRUFBRSxZQUFNO0FBQ3RELFFBQU0sSUFBSSxHQUFHLElBQUksQ0FBQztBQUNsQixPQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2hCLE9BQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEIsT0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNmLE9BQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDZixPQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2YsT0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQixLQUFDLFlBQU07QUFBRSxTQUFHLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQUUsQ0FBQSxDQUFFLE1BQU0sU0FBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3hELGlCQWhDSyx5QkFBeUIsRUFnQ0osT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0dBQzFDLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2xvZ2dlci10ZXN0LXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHJhbnNwaWxlOm1vY2hhXG5cbmltcG9ydCB7IGdldER5bmFtaWNMb2dnZXIsIHJlc3RvcmVXcml0ZXJzLCBzZXR1cFdyaXRlcnMsXG4gICAgICAgICBhc3NlcnRPdXRwdXREb2VzbnRDb250YWluIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuZGVzY3JpYmUoJ3Rlc3QgbG9nZ2VyJywgKCkgPT4ge1xuICBsZXQgd3JpdGVycywgbG9nO1xuICBiZWZvcmUoKCkgPT4ge1xuICAgIHdyaXRlcnMgPSBzZXR1cFdyaXRlcnMoKTtcbiAgICBsb2cgPSBnZXREeW5hbWljTG9nZ2VyKHRydWUpO1xuICB9KTtcblxuICBhZnRlcigoKSA9PiB7XG4gICAgcmVzdG9yZVdyaXRlcnMod3JpdGVycyk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgY29udGFpbnMgbGV2ZWxzJywgKCkgPT4ge1xuICAgIGxvZy5sZXZlbHMuc2hvdWxkLmhhdmUubGVuZ3RoLmFib3ZlKDMpO1xuICAgIGxvZy5sZXZlbHNbMl0uc2hvdWxkLmVxdWFsKCdkZWJ1ZycpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHVud3JhcCcsICgpID0+IHtcbiAgICBsb2cudW53cmFwLnNob3VsZC5leGlzdHM7XG4gICAgbG9nLnVud3JhcCgpLnNob3VsZC5leGlzdHM7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgcmV3cml0ZSBucG1sb2cgbGV2ZWxzIGR1cmluZyB0ZXN0aW5nJywgKCkgPT4ge1xuICAgIGNvbnN0IHRleHQgPSAnaGknO1xuICAgIGxvZy5zaWxseSh0ZXh0KTtcbiAgICBsb2cudmVyYm9zZSh0ZXh0KTtcbiAgICBsb2cuaW5mbyh0ZXh0KTtcbiAgICBsb2cuaHR0cCh0ZXh0KTtcbiAgICBsb2cud2Fybih0ZXh0KTtcbiAgICBsb2cuZXJyb3IodGV4dCk7XG4gICAgKCgpID0+IHsgbG9nLmVycm9yQW5kVGhyb3codGV4dCk7IH0pLnNob3VsZC50aHJvdyh0ZXh0KTtcbiAgICBhc3NlcnRPdXRwdXREb2VzbnRDb250YWluKHdyaXRlcnMsIHRleHQpO1xuICB9KTtcbn0pO1xuIl19