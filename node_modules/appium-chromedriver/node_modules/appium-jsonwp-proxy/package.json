{
  "_args": [
    [
      "appium-jsonwp-proxy@https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
      "/Users/vimalraj/Documents/Development/appium/node_modules/appium-chromedriver"
    ]
  ],
  "_from": "appium-jsonwp-proxy@https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
  "_id": "appium-jsonwp-proxy@1.4.1",
  "_inCache": true,
  "_location": "/appium-chromedriver/appium-jsonwp-proxy",
  "_phantomChildren": {
    "bplist-creator": "0.0.6",
    "bplist-parser": "0.1.0",
    "lodash": "3.10.1",
    "mkdirp": "0.5.1",
    "mv": "2.0.3",
    "ncp": "2.0.0",
    "plist": "1.1.0",
    "request": "2.65.0",
    "rimraf": "2.4.3",
    "source-map-support": "0.3.3",
    "teen_process": "1.5.1",
    "which": "1.2.0"
  },
  "_requested": {
    "name": "appium-jsonwp-proxy",
    "raw": "appium-jsonwp-proxy@https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
    "rawSpec": "https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium-chromedriver"
  ],
  "_resolved": "https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
  "_shasum": "e61c7ee9661117bc4fddea570636e95f0b51639a",
  "_shrinkwrap": null,
  "_spec": "appium-jsonwp-proxy@https://registry.npmjs.org/appium-jsonwp-proxy/-/appium-jsonwp-proxy-1.4.1.tgz",
  "_where": "/Users/vimalraj/Documents/Development/appium/node_modules/appium-chromedriver",
  "author": {
    "name": "appium"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/appium/jsonwp-proxy/issues"
  },
  "dependencies": {
    "appium-logger": "^2.0.0",
    "appium-support": "^2.0.6",
    "babel-runtime": "=5.8.24",
    "continuation-local-storage": "^3.1.4",
    "jsonwp-status": "0.0.1",
    "lodash": "^3.10.1",
    "request-promise": "^1.0.1",
    "source-map-support": "^0.3.2"
  },
  "description": "Reusable JSONWP Proxy",
  "devDependencies": {
    "appium-gulp-plugins": "^1.3.11",
    "asyncbox": "^2.3.1",
    "chai": "^3.3.0",
    "chai-as-promised": "^5.1.0",
    "chromedriver": "^2.19.0",
    "gulp": "^3.9.0"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "homepage": "https://github.com/appium/jsonwp-proxy#readme",
  "keywords": [
    "appium"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "appium-jsonwp-proxy",
  "optionalDependencies": {},
  "readme": "## appium-jsonwp-proxy\n\n[![NPM version](http://img.shields.io/npm/v/appium-jsonwp-proxy.svg)](https://npmjs.org/package/appium-jsonwp-proxy)\n[![Downloads](http://img.shields.io/npm/dm/appium-jsonwp-proxy.svg)](https://npmjs.org/package/appium-jsonwp-proxy)\n[![Dependency Status](https://david-dm.org/appium/jsonwp-proxy/master.svg)](https://david-dm.org/appium/jsonwp-proxy/master)\n[![devDependency Status](https://david-dm.org/appium/jsonwp-proxy/master/dev-status.svg)](https://david-dm.org/appium/jsonwp-proxy/master#info=devDependencies)\n\n[![Build Status](https://api.travis-ci.org/appium/jsonwp-proxy.png?branch=2.0)](https://travis-ci.org/appium/jsonwp-proxy)\n[![Coverage Status](https://coveralls.io/repos/appium/jsonwp-proxy/badge.svg?branch=master)](https://coveralls.io/r/appium/jsonwp-proxy?branch=master)\n\nProxy middleware for the Selenium [JSON Wire Protocol](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md). Allows\n\n\n### Usage\n\nThe proxy is used by instantiating with the details of the Selenium server to which to proxy. The options for the constructor are passed as a hash with the following possible member:\n\n- `scheme` - defaults to 'http'\n- `server` - defaults to 'localhost'\n- `port` - defaults to `4444`\n- `base` - defaults to '/wd/hub'\n- `sessionId` - the session id of the session on the remote server\n\nOnce the proxy is created, there are two `async` methods:\n\n`command (url, method, body)`\n\nSends a \"command\" to the proxied server, using the \"url\", which is the endpoing, with the HTTP method and optional body.\n\n```js\nimport JWProxy from 'appium-jsonwp-proxy';\n\nlet host = 'my.host.com';\nlet port = 4445;\n\nlet proxy = new JWProxy({server: host, port: port});\n\n// get the Selenium server status\nlet seStatus = await proxy.command('/status', 'GET');\n```\n\n`proxyReqRes (req, res)`\n\nProxies a request and response to the proxied server. Used to handle the entire conversation of a request/response cycle.\n\n```js\nimport JWProxy from 'appium-jsonwp-proxy';\nimport http from 'http';\n\nlet host = 'my.host.com';\nlet port = 4445;\n\nlet proxy = new JWProxy({server: host, port: port});\n\n\nhttp.createServer(function (req, res) {\n  await proxy.proxyReqRes(res, res);\n}).listen(9615);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/jsonwp-proxy.git"
  },
  "scripts": {
    "prepublish": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp"
  },
  "version": "1.4.1"
}
