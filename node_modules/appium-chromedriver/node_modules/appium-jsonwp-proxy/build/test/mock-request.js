'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
function resFixture(url, method, json) {
  if (/\/status$/.test(url)) {
    return [200, { status: 0, value: { foo: 'bar' } }];
  }
  if (/\/element\/bad\/text$/.test(url)) {
    return [500, { status: 11, value: { message: 'Invisible element' } }];
  }
  if (/\/element\/200\/text$/.test(url)) {
    return [200, { status: 11, value: { message: 'Invisible element' } }];
  }
  if (/\/element\/200\/value$/.test(url)) {
    return [200, { status: 0, sessionId: 'innersessionid', value: 'foobar' }];
  }
  if (/\/session$/.test(url) && method === "POST") {
    if (json.desiredCapabilities && json.desiredCapabilities.redirect) {
      return [303, 'http://localhost:4444/wd/hub/session/123'];
    } else {
      return [200, { status: 0, sessionId: '123', value: { browserName: 'boo' } }];
    }
  }
  if (/\/nochrome$/.test(url)) {
    return [100, { status: 0, value: { message: 'chrome not reachable' } }];
  }
  throw new Error("Can't handle url " + url);
}

function request(opts) {
  var _resFixture, _resFixture2, statusCode, body, response;

  return _regeneratorRuntime.async(function request$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!/badurl$/.test(opts.url)) {
          context$1$0.next = 2;
          break;
        }

        throw new Error("noworky");

      case 2:
        _resFixture = resFixture(opts.url, opts.method, opts.json);
        _resFixture2 = _slicedToArray(_resFixture, 2);
        statusCode = _resFixture2[0];
        body = _resFixture2[1];
        response = {
          statusCode: statusCode,
          headers: { 'Content-type': 'application/json' },
          body: body
        };
        return context$1$0.abrupt('return', response);

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports['default'] = request;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbW9jay1yZXF1ZXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLFNBQVMsVUFBVSxDQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0FBQ3RDLE1BQUksV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUN6QixXQUFPLENBQUMsR0FBRyxFQUFFLEVBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBQyxHQUFHLEVBQUUsS0FBSyxFQUFDLEVBQUMsQ0FBQyxDQUFDO0dBQ2hEO0FBQ0QsTUFBSSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDckMsV0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUMsT0FBTyxFQUFFLG1CQUFtQixFQUFDLEVBQUMsQ0FBQyxDQUFDO0dBQ25FO0FBQ0QsTUFBSSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDckMsV0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUMsT0FBTyxFQUFFLG1CQUFtQixFQUFDLEVBQUMsQ0FBQyxDQUFDO0dBQ25FO0FBQ0QsTUFBSSx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDdEMsV0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFDO0dBQ3pFO0FBQ0QsTUFBSSxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLE1BQU0sS0FBSyxNQUFNLEVBQUU7QUFDL0MsUUFBSSxJQUFJLENBQUMsbUJBQW1CLElBQUksSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsRUFBRTtBQUNqRSxhQUFPLENBQUMsR0FBRyxFQUFFLDBDQUEwQyxDQUFDLENBQUM7S0FDMUQsTUFBTTtBQUNMLGFBQU8sQ0FBQyxHQUFHLEVBQUUsRUFBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUMsV0FBVyxFQUFFLEtBQUssRUFBQyxFQUFDLENBQUMsQ0FBQztLQUMxRTtHQUNGO0FBQ0QsTUFBSSxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO0FBQzNCLFdBQU8sQ0FBQyxHQUFHLEVBQUUsRUFBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFDLE9BQU8sRUFBRSxzQkFBc0IsRUFBQyxFQUFDLENBQUMsQ0FBQztHQUNyRTtBQUNELFFBQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLEdBQUcsR0FBRyxDQUFDLENBQUM7Q0FDNUM7O0FBRUQsU0FBZSxPQUFPLENBQUUsSUFBSTtpQ0FLckIsVUFBVSxFQUFFLElBQUksRUFDakIsUUFBUTs7Ozs7YUFMUixTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7Ozs7O2NBQ3BCLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQzs7O3NCQUdILFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQzs7QUFBaEUsa0JBQVU7QUFBRSxZQUFJO0FBQ2pCLGdCQUFRLEdBQUc7QUFDYixvQkFBVSxFQUFWLFVBQVU7QUFDVixpQkFBTyxFQUFFLEVBQUMsY0FBYyxFQUFFLGtCQUFrQixFQUFDO0FBQzdDLGNBQUksRUFBSixJQUFJO1NBQ0w7NENBQ00sUUFBUTs7Ozs7OztDQUNoQjs7cUJBRWMsT0FBTyIsImZpbGUiOiJ0ZXN0L21vY2stcmVxdWVzdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlc0ZpeHR1cmUgKHVybCwgbWV0aG9kLCBqc29uKSB7XG4gIGlmICgvXFwvc3RhdHVzJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHZhbHVlOiB7Zm9vOiAnYmFyJ319XTtcbiAgfVxuICBpZiAoL1xcL2VsZW1lbnRcXC9iYWRcXC90ZXh0JC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFs1MDAsIHtzdGF0dXM6IDExLCB2YWx1ZToge21lc3NhZ2U6ICdJbnZpc2libGUgZWxlbWVudCd9fV07XG4gIH1cbiAgaWYgKC9cXC9lbGVtZW50XFwvMjAwXFwvdGV4dCQvLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBbMjAwLCB7c3RhdHVzOiAxMSwgdmFsdWU6IHttZXNzYWdlOiAnSW52aXNpYmxlIGVsZW1lbnQnfX1dO1xuICB9XG4gIGlmICgvXFwvZWxlbWVudFxcLzIwMFxcL3ZhbHVlJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHNlc3Npb25JZDogJ2lubmVyc2Vzc2lvbmlkJywgdmFsdWU6ICdmb29iYXInfV07XG4gIH1cbiAgaWYgKC9cXC9zZXNzaW9uJC8udGVzdCh1cmwpICYmIG1ldGhvZCA9PT0gXCJQT1NUXCIpIHtcbiAgICBpZiAoanNvbi5kZXNpcmVkQ2FwYWJpbGl0aWVzICYmIGpzb24uZGVzaXJlZENhcGFiaWxpdGllcy5yZWRpcmVjdCkge1xuICAgICAgcmV0dXJuIFszMDMsICdodHRwOi8vbG9jYWxob3N0OjQ0NDQvd2QvaHViL3Nlc3Npb24vMTIzJ107XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBbMjAwLCB7c3RhdHVzOiAwLCBzZXNzaW9uSWQ6ICcxMjMnLCB2YWx1ZToge2Jyb3dzZXJOYW1lOiAnYm9vJ319XTtcbiAgICB9XG4gIH1cbiAgaWYgKC9cXC9ub2Nocm9tZSQvLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBbMTAwLCB7c3RhdHVzOiAwLCB2YWx1ZToge21lc3NhZ2U6ICdjaHJvbWUgbm90IHJlYWNoYWJsZSd9fV07XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgaGFuZGxlIHVybCBcIiArIHVybCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlcXVlc3QgKG9wdHMpIHtcbiAgaWYgKC9iYWR1cmwkLy50ZXN0KG9wdHMudXJsKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIm5vd29ya3lcIik7XG4gIH1cblxuICBsZXQgW3N0YXR1c0NvZGUsIGJvZHldID0gcmVzRml4dHVyZShvcHRzLnVybCwgb3B0cy5tZXRob2QsIG9wdHMuanNvbik7XG4gIGxldCByZXNwb25zZSA9IHtcbiAgICBzdGF0dXNDb2RlLFxuICAgIGhlYWRlcnM6IHsnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfSxcbiAgICBib2R5XG4gIH07XG4gIHJldHVybiByZXNwb25zZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVxdWVzdDtcbiJdfQ==