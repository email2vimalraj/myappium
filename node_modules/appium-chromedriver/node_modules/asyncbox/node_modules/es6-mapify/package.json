{
  "_args": [
    [
      "es6-mapify@https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
      "/Users/vimalraj/Documents/Development/appium/node_modules/appium-chromedriver/node_modules/asyncbox"
    ]
  ],
  "_from": "es6-mapify@https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
  "_id": "es6-mapify@1.0.0",
  "_inCache": true,
  "_location": "/appium-chromedriver/asyncbox/es6-mapify",
  "_phantomChildren": {},
  "_requested": {
    "name": "es6-mapify",
    "raw": "es6-mapify@https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium-chromedriver/asyncbox"
  ],
  "_resolved": "https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
  "_shasum": "4c745ea075505ea7c616bc2e652eecea6e18de7f",
  "_shrinkwrap": null,
  "_spec": "es6-mapify@https://registry.npmjs.org/es6-mapify/-/es6-mapify-1.0.0.tgz",
  "_where": "/Users/vimalraj/Documents/Development/appium/node_modules/appium-chromedriver/node_modules/asyncbox",
  "author": {
    "name": "jlipps@gmail.com"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/jlipps/mapify/issues"
  },
  "dependencies": {
    "traceur": "~0.0.74"
  },
  "description": "Convert JS objects to ES6 Maps and vice versa",
  "devDependencies": {
    "gulp": "^3.8.9",
    "gulp-traceur": "^0.13.0",
    "merge-stream": "^0.1.6",
    "mocha": "^2.0.1",
    "should": "^4.1.0"
  },
  "directories": {
    "lib": "./lib/es6"
  },
  "engines": [
    "node"
  ],
  "homepage": "https://github.com/jlipps/mapify#readme",
  "licenses": [
    {
      "type": "apache-2.0",
      "url": "https://raw.github.com/jlipps/mapify/master/LICENSE"
    }
  ],
  "main": "./lib/es5/main.js",
  "name": "es6-mapify",
  "optionalDependencies": {},
  "readme": "ES6-Mapify\n======\n\nConvert JS Objects to ES6 Maps and vice versa.\n\nES6 is really nice for iteration, but it's not so nice for directly referencing properties, the way JS Objects are. This is a nice way to convert back and forth. First, simply use `npm` to include `mapify` in your project's dependencies:\n\n```\nnpm install es6-mapify\n```\n\nNow you can import it and use it like so:\n\n```js\nimport { mapify } from 'es6-mapify';\n\n// converts basic objects\nlet myObj = {foo: 'bar'};\nlet myMap = mapify(myObj);\nmyMap.get('foo'); // 'bar'\n\n// doesn't do anything to non-objects\nmapify('foo'); // 'foo';\nmapify(null);  // null\n\n// is smart about objects nested inside arrays and other objects\nlet arrMap = mapify([1, {foo: 'bar'}, 3]);\narrMap[2];            // 3\narrMap[1].get('foo'); // 'bar'\n\nlet myMap = mapify({foo: {bar: 'baz'}});\nmyMap.get('foo').get('bar'); // 'baz';\n```\n\nOf course, you might want to go the other direction too! If you have a `Map` and want the corresponding basic JS object, just use `demapify`:\n\n```js\nimport { demapify } from 'mapify';\n\n// converts basic maps\nlet myMap = new Map();\nmyMap.set('foo', 'bar');\ndemapify(myMap); // {foo: 'bar'}\n\n// doesn't do anything to non-objects\ndemapify(2); // 2\n\n// is smart about nested Maps (and Maps in arrays)\nlet myMap = new Map()\n  , myMap2 = new Map();\nmyMap.set('foo', 'bar');\nmyMap2.set('baz', 'quux');\nmyMap.set('inception', myMap2);\ndemapify(myMap); // {foo: 'bar', inception: {baz: 'quux'}}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jlipps/mapify.git"
  },
  "scripts": {
    "test": "$(npm bin)/gulp && $(npm bin)/mocha test/es5/specs.js"
  },
  "tags": [
    "es6",
    "map",
    "object",
    "utility"
  ],
  "version": "1.0.0"
}
