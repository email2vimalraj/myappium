require('source-map-support').install();

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _ = require('..');

var _libUtils = require('../lib/utils');

var utils = _interopRequireWildcard(_libUtils);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _appiumTestSupport = require('appium-test-support');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);
var P = _Promise;

describe('Early failures', (0, _appiumTestSupport.withSandbox)({}, function (S) {
  it('should error on getInstrumentsPath failure', function callee$1$0() {
    var instruments, onExitSpy;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          instruments = new _.Instruments({});

          S.sandbox.stub(utils, 'getInstrumentsPath').returns(P.reject(new Error('ouch!')));
          onExitSpy = _sinon2['default'].spy();

          instruments.onShutdown.then(onExitSpy, onExitSpy).done();
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(instruments.launch().should.be.rejectedWith(/ouch!/));

        case 6:
          onExitSpy.should.not.have.been.called;

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZWFybHktZmFpbHVyZXMtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Z0JBRTRCLElBQUk7O3dCQUNULGNBQWM7O0lBQXpCLEtBQUs7O29CQUNBLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O3FCQUMzQixPQUFPOzs7O2lDQUNHLHFCQUFxQjs7QUFHakQsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDO0FBQ3pCLElBQUksQ0FBQyxXQUFVLENBQUM7O0FBRWhCLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxvQ0FBWSxFQUFFLEVBQUUsVUFBQyxDQUFDLEVBQUs7QUFDaEQsSUFBRSxDQUFDLDRDQUE0QyxFQUFFO1FBQzNDLFdBQVcsRUFFWCxTQUFTOzs7O0FBRlQscUJBQVcsR0FBRyxrQkFBZ0IsRUFBRSxDQUFDOztBQUNyQyxXQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUUsbUJBQVMsR0FBRyxtQkFBTSxHQUFHLEVBQUU7O0FBQzNCLHFCQUFXLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7OzJDQUNuRCxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDOzs7QUFDMUQsbUJBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDOzs7Ozs7O0dBQ3ZDLENBQUMsQ0FBQztDQUVKLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZWFybHktZmFpbHVyZXMtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0cmFuc3BpbGU6bW9jaGFcblxuaW1wb3J0IHsgSW5zdHJ1bWVudHMgfSBmcm9tICcuLic7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuLi9saWIvdXRpbHMnO1xuaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgc2lub24gZnJvbSAnc2lub24nO1xuaW1wb3J0IHsgd2l0aFNhbmRib3ggfSBmcm9tICdhcHBpdW0tdGVzdC1zdXBwb3J0JztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xubGV0IFAgPSBQcm9taXNlO1xuXG5kZXNjcmliZSgnRWFybHkgZmFpbHVyZXMnLCB3aXRoU2FuZGJveCh7fSwgKFMpID0+IHtcbiAgaXQoJ3Nob3VsZCBlcnJvciBvbiBnZXRJbnN0cnVtZW50c1BhdGggZmFpbHVyZScsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgaW5zdHJ1bWVudHMgPSBuZXcgSW5zdHJ1bWVudHMoe30pO1xuICAgIFMuc2FuZGJveC5zdHViKHV0aWxzLCAnZ2V0SW5zdHJ1bWVudHNQYXRoJykucmV0dXJucyhQLnJlamVjdChuZXcgRXJyb3IoJ291Y2ghJykpKTtcbiAgICBsZXQgb25FeGl0U3B5ID0gc2lub24uc3B5KCk7XG4gICAgaW5zdHJ1bWVudHMub25TaHV0ZG93bi50aGVuKG9uRXhpdFNweSwgb25FeGl0U3B5KS5kb25lKCk7XG4gICAgYXdhaXQgaW5zdHJ1bWVudHMubGF1bmNoKCkuc2hvdWxkLmJlLnJlamVjdGVkV2l0aCgvb3VjaCEvKTtcbiAgICBvbkV4aXRTcHkuc2hvdWxkLm5vdC5oYXZlLmJlZW4uY2FsbGVkO1xuICB9KTtcblxufSkpO1xuXG4iXX0=