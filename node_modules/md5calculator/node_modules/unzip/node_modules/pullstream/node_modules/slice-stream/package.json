{
  "_args": [
    [
      "slice-stream@https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
      "/Users/vimalraj/Documents/Development/appium/node_modules/md5calculator/node_modules/unzip/node_modules/pullstream"
    ]
  ],
  "_from": "slice-stream@https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
  "_id": "slice-stream@1.0.0",
  "_inCache": true,
  "_location": "/md5calculator/unzip/pullstream/slice-stream",
  "_phantomChildren": {},
  "_requested": {
    "name": "slice-stream",
    "raw": "slice-stream@https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/md5calculator/unzip/pullstream"
  ],
  "_resolved": "https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
  "_shasum": "5b33bd66f013b1a7f86460b03d463dec39ad3ea0",
  "_shrinkwrap": null,
  "_spec": "slice-stream@https://registry.npmjs.org/slice-stream/-/slice-stream-1.0.0.tgz",
  "_where": "/Users/vimalraj/Documents/Development/appium/node_modules/md5calculator/node_modules/unzip/node_modules/pullstream",
  "author": {
    "email": "eoxfeld@gmail.com",
    "name": "Evan Oxfeld"
  },
  "bugs": {
    "url": "https://github.com/EvanOxfeld/slice-stream/issues"
  },
  "dependencies": {
    "readable-stream": "~1.0.31"
  },
  "description": "Pipe data through a stream until some fixed length is reached, then callback.",
  "devDependencies": {
    "stream-buffers": ">= 0.2.4 < 1",
    "tap": ">= 0.4.0 < 1"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "gitHead": "9054cbab67c2e71ab9241dbe88401c786b270f8e",
  "homepage": "https://github.com/EvanOxfeld/slice-stream#readme",
  "keywords": [
    "fixed",
    "length",
    "slice",
    "split",
    "stream"
  ],
  "license": "MIT",
  "main": "slicestream.js",
  "name": "slice-stream",
  "optionalDependencies": {},
  "readme": "slice-stream [![Build Status](https://travis-ci.org/EvanOxfeld/slice-stream.png)](https://travis-ci.org/EvanOxfeld/slice-stream)\n============\n\nPipe data through a stream until some fixed length is reached, then callback.\n\n## Installation\n\n```bash\n$ npm install slice-stream\n```\n\n## Quick Example\n\n### End stream once a fixed length has been reached\n\n```javascript\nvar SliceStream = require('../');\nvar streamBuffers = require(\"stream-buffers\");\n\nvar ss = new SliceStream({ length: 5}, function (buf, sliceEnd, extra) {\n  if (!sliceEnd) {\n    return this.push(buf);\n  }\n  this.push(buf);\n  return this.push(null); //signal end of data\n});\n\nvar sourceStream = new streamBuffers.ReadableStreamBuffer();\nsourceStream.put(\"Hello World\");\nvar writableStream = new streamBuffers.WritableStreamBuffer();\n\nsourceStream\n  .pipe(ss)\n  .pipe(writableStream)\n  .once('close', function () {\n    var str = writableStream.getContentsAsString('utf8');\n    console.log('First 5 bytes piped:', \"'\" + str + \"'\");\n    sourceStream.destroy();\n  });\n\n//Output\n//Piped data before pattern occurs: 'Hello'\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/EvanOxfeld/slice-stream.git"
  },
  "scripts": {
    "test": "tap ./test/*.js"
  },
  "version": "1.0.0"
}
